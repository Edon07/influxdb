syntax = "proto3";
package storage;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";
import "github.com/influxdata/yarpc/yarpcproto/yarpc.proto";
import "predicate.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;

service Storage {
  option (yarpcproto.yarpc_service_index) = 0x00;

  // Read performs a read operation using the given ReadRequest
  rpc Read (ReadRequest) returns (stream ReadResponse) {
    option (yarpcproto.yarpc_method_index) = 0x00;
  }

  // Capabilities returns a map of keys and values identifying the capabilities supported by the storage engine
  rpc Capabilities (google.protobuf.Empty) returns (CapabilitiesResponse) {
    option (yarpcproto.yarpc_method_index) = 0x01;
  }

  rpc Hints (google.protobuf.Empty) returns (HintsResponse) {
    option (yarpcproto.yarpc_method_index) = 0x02;
  }

  // Explain describes the costs associated with executing a given Read request
  // rpc Explain(google.protobuf.Empty) returns (ExplainResponse){}
}

message ReadRequest {
  string database = 1;
  TimestampRange timestamp_range = 2 [(gogoproto.customname) = "TimestampRange", (gogoproto.nullable) = false];
  bool descending = 3;
  // Grouping specifies a list of tags used to order the data
  repeated string grouping = 4;

  int64 limit = 5;

  Predicate predicate = 6;
}

message ReadResponse {
  enum FrameType {
    option (gogoproto.goproto_enum_prefix) = false;

    SERIES = 0 [(gogoproto.enumvalue_customname) = "FrameTypeSeries"];
    POINTS = 1 [(gogoproto.enumvalue_customname) = "FrameTypePoints"];
  }

  message Frame {
    oneof data {
      SeriesFrame series = 1;
      FloatPointsFrame float_points = 2 [(gogoproto.customname) = "FloatPoints"];
      IntegerPointsFrame integer_points = 3 [(gogoproto.customname) = "IntegerPoints"];
    }
  }

  message SeriesFrame {
    string name = 1;
  }

  message FloatPointsFrame {
    repeated int64 timestamps = 1;
    repeated double values = 2;
  }

  message IntegerPointsFrame {
    repeated int64 timestamps = 1;
    repeated int64 values = 2;
  }

  repeated Frame frames = 1 [(gogoproto.nullable) = false];
}

message CapabilitiesResponse {
  map<string, string> caps = 1;
}

message HintsResponse {
}

// Specifies a continuous range of nanosecond timestamps.
message TimestampRange {
  // Start defines the inclusive lower bound.
  int64 start = 1;

  // End defines the inclusive upper bound.
  int64 end = 2;
}

//message ExplainRequest {
//  ReadRequest read_request = 1 [(gogoproto.customname) = "ReadRequest"];
//}
//
//message ExplainResponse {}
